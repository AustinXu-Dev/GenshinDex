"use client";
import { useState, useEffect, useRef } from "react";
import { useForm } from "react-hook-form";
import Link from 'next/link';
import Image from 'next/image';

export default function MonsterPage() {
  const API_BASE = "/api";
  const { register, handleSubmit, reset } = useForm();
  const dropdownRef = useRef(null);

  const [monsters, setMonsters] = useState([]);
  const [originalMonsters, setOriginalMonsters] = useState([]); // To keep original monster list for reset
  const [editMode, setEditMode] = useState(false);
  const [selectedMonster, setSelectedMonster] = useState(null);
  const [showPopup, setShowPopup] = useState(false);
  const [popupType, setPopupType] = useState(''); // 'add' or 'edit' or 'view'

  const [uniqueTypes, setUniqueTypes] = useState([]);
  const [uniqueElementals, setUniqueElementals] = useState([]);

  const [selectedSort, setSelectedSort] = useState(""); // Track selected sort option
  const [selectedFilters, setSelectedFilters] = useState({
    type: null,
    elemental: null,
  }); // Track selected filters

  const [dropdownVisible, setDropdownVisible] = useState({
    sort: false,
    filterType: false,
    filterElemental: false,
  });

  useEffect(() => {
    fetchMonsters();
  }, []);

  useEffect(() => {
    function handleClickOutside(event) {
      if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {
        setDropdownVisible({
          sort: false,
          filterType: false,
          filterElemental: false,
        });
      }
    }

    document.addEventListener("mousedown", handleClickOutside);
    return () => {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, []);

  async function fetchMonsters() {
    try {
      const data = await fetch(`${API_BASE}/monsters`);
      const monsters = await data.json();
      setMonsters(monsters);
      setOriginalMonsters(monsters); // Save the original list for reset

      setUniqueTypes([...new Set(monsters.map(m => m.type))]);
      setUniqueElementals([...new Set(monsters.map(m => m.elemental || "none"))]); // Handle null as 'none'
    } catch (error) {
      console.error("Error fetching monsters:", error);
    }
  }

  function convertHpToNumber(hpString) {
    return parseInt(hpString.replace(/[^\d]/g, "")); // Remove non-numeric characters and convert to number
  }

  function handleSortBy(attribute) {
    setSelectedSort(attribute);
    const sortedMonsters = [...monsters].sort((a, b) => {
      if (attribute === "name") {
        return a[attribute].localeCompare(b[attribute]);
      } else if (attribute === "hp") {
        return convertHpToNumber(a[attribute]) - convertHpToNumber(b[attribute]);
      }
    });
    setMonsters(sortedMonsters);
  }

  function undoSort() {
    setSelectedSort("");
    applyFilters();
  }

  function handleFilterBy(criteria, value) {
    const newFilters = { ...selectedFilters };

    if (selectedFilters[criteria] === value) {
      newFilters[criteria] = null;
    } else {
      newFilters[criteria] = value;
    }

    setSelectedFilters(newFilters);
    applyFilters(newFilters);
  }

  function applyFilters(filters = selectedFilters) {
    let filteredMonsters = [...originalMonsters];

    if (filters.type) {
      filteredMonsters = filteredMonsters.filter(monster => monster.type === filters.type);
    }

    if (filters.elemental) {
      filteredMonsters = filteredMonsters.filter(monster => (monster.elemental || "none") === filters.elemental);
    }

    setMonsters(filteredMonsters);
  }

  function undoFilter() {
    setSelectedFilters({ type: null, elemental: null });
    setMonsters(originalMonsters);
  }

  function startEditMode(monster) {
    reset(monster);
    setSelectedMonster(monster);
    setPopupType('edit');
    setShowPopup(true);
  }

  function stopEditMode() {
    reset({
      name: "",
      type: "",
      elemental: "",
      hp: "",
      description: "",
      img: "",
    });
    setEditMode(false);
    setSelectedMonster(null);
    setShowPopup(false);
  }

  function handleMonsterFormSubmit(data) {
    const method = popupType === 'edit' ? "PUT" : "POST";
    const url = popupType === 'edit' ? `${API_BASE}/monsters/${selectedMonster.id}` : `${API_BASE}/monsters`;

    fetch(url, {
      method,
      headers: {
        "Content-Type": "application/json",
      },
      body: JSON.stringify(data),
    }).then(() => {
      fetchMonsters();
      stopEditMode();
    });
  }

  async function deleteMonster(monster) {
    if (!confirm(`Are you sure to delete [${monster.name}]`)) return;

    try {
      const res = await fetch(`${API_BASE}/monsters/${monster.id}`, {
        method: "DELETE",
      });

      if (res.ok) {
        fetchMonsters();
      } else {
        const errorData = await res.json();
        console.error('Delete failed:', errorData.message || 'Unknown error');
      }
    } catch (error) {
      console.error('Error deleting monster:', error);
    }
  }

  function viewMonsterInfo(monster) {
    setSelectedMonster(monster);
    setPopupType('view');
    setShowPopup(true);
  }

  function closePopup() {
    setShowPopup(false);
    setSelectedMonster(null);
  }

  const toggleDropdown = (type) => {
    setDropdownVisible({
      ...dropdownVisible,
      [type]: !dropdownVisible[type],
    });
  };

  return (
    <div className="container mx-auto py-8" ref={dropdownRef}>
      <div className="flex justify-between items-center mb-8">
        <Link href="/">
        <button type="button" className="text-white text-xl hover:bg-indigo-950 focus:ring-4 focus:outline-none focus:ring-blue-300 font-bold rounded-lg text-sm px-5 py-3 text-center inline-flex items-center gap-2 me-2">
        <svg className="w-5 h-5 flip-horizontal" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10">
        <path stroke="currentColor" strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M1 5h12m0 0L9 1m4 4L9 9"/>
        </svg>
        Back
        <span className="sr-only">Icon description</span>
        </button>
        </Link>
        <div className="flex items-center gap-3">
        <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
            <path d="M13.3858 0.862983C13.8645 1.34262 14.3432 1.82226 14.8364 2.31643C14.6125 4.61298 14.6125 4.61298 14.1111 7.40348C13.983 8.30186 13.8549 9.20025 13.7229 10.1259C13.3688 12.6098 13.0146 15.0937 12.6604 17.5776C14.6341 19.2102 14.6341 19.2102 16.5136 18.9402C18.9367 18.1498 20.7303 16.8503 22.8148 15.3974C27.2143 13.9281 33.0341 13.8183 37.3663 15.6245C39.4968 16.8509 39.4968 16.8509 40.9928 18.1226C42.4523 19.2722 42.4523 19.2722 44.7553 18.8039C45.4135 18.6391 46.0718 18.4742 46.7499 18.3043C46.9108 13.8528 46.6421 10.2387 45.2993 5.95004C44.982 3.95155 44.982 3.95155 45.2993 2.31643C47.126 0.747653 48.3397 0.180304 50.7391 0C55.1809 2.11396 56.8227 7.94367 58.5022 12.2748C60.0816 16.836 60.7882 21.2579 58.7175 25.7532C56.4856 28.2131 54.081 29.9251 51.1018 31.3853C50.6231 31.3853 50.1444 31.3853 49.6512 31.3853C49.689 32.4518 49.689 32.4518 49.7277 33.5399C49.8862 41.2319 49.3623 47.11 44.4408 53.2892C40.4567 57.3755 36.0957 59.806 30.3852 60C24.9653 59.9344 21.0789 58.3628 16.9868 54.8136C11.9262 49.5063 9.80907 43.0134 9.75922 35.7456C10.0765 33.1113 10.0765 33.1113 10.4845 31.3853C9.85623 31.2204 9.22793 31.0556 8.58059 30.8857C5.36101 29.6312 2.7899 27.9684 0.950689 24.9243C-1.3148 19.3273 0.919551 13.6175 2.96229 8.29485C6.67443 -0.457884 6.67443 -0.457884 13.3858 0.862983ZM17.7376 27.7517C16.835 29.2413 16.2737 30.2579 16.3323 32.0212C18.3189 36.533 22.346 39.7318 26.4413 42.2861C26.92 42.2861 27.3987 42.2861 27.8919 42.2861C27.8919 41.5667 27.8919 40.8472 27.8919 40.106C26.5171 38.8149 26.5171 38.8149 24.764 37.6079C21.6182 35.3391 19.5123 33.6468 18.6896 29.7502C18.6148 29.0907 18.54 28.4312 18.4629 27.7517C18.2236 27.7517 17.9842 27.7517 17.7376 27.7517ZM41.6728 28.4784C41.4185 29.3478 41.1641 30.2171 40.9021 31.1128C39.2854 35.4842 35.994 37.6009 32.2438 40.106C32.4831 40.8254 32.7225 41.5449 32.9691 42.2861C38.4298 38.3303 38.4298 38.3303 43.1234 33.5655C43.4272 31.2323 43.4272 31.2323 43.1234 29.2051C42.6447 28.9653 42.166 28.7255 41.6728 28.4784Z" fill="#F3F3F3"/>
            <path d="M13.3858 0.862983C13.8645 1.34262 14.3432 1.82226 14.8364 2.31643C14.6125 4.61298 14.6125 4.61298 14.1111 7.40348C13.983 8.30186 13.8549 9.20025 13.7229 10.1259C13.3688 12.6098 13.0146 15.0937 12.6604 17.5776C14.6341 19.2102 14.6341 19.2102 16.5136 18.9402C18.9367 18.1498 20.7303 16.8503 22.8148 15.3974C27.2143 13.9281 33.0341 13.8183 37.3663 15.6245C39.4968 16.8509 39.4968 16.8509 40.9928 18.1226C42.4523 19.2722 42.4523 19.2722 44.7553 18.8039C45.4135 18.6391 46.0718 18.4742 46.7499 18.3043C46.9108 13.8528 46.6421 10.2387 45.2993 5.95004C44.982 3.95155 44.982 3.95155 45.2993 2.31643C47.126 0.747653 48.3397 0.180304 50.7391 0C55.1809 2.11396 56.8227 7.94367 58.5022 12.2748C60.0816 16.836 60.7882 21.2579 58.7175 25.7532C56.4856 28.2131 54.081 29.9251 51.1018 31.3853C50.6231 31.3853 50.1444 31.3853 49.6512 31.3853C49.689 32.4518 49.689 32.4518 49.7277 33.5399C49.8862 41.2319 49.3623 47.11 44.4408 53.2892C40.4567 57.3755 36.0957 59.806 30.3852 60C24.9653 59.9344 21.0789 58.3628 16.9868 54.8136C11.9262 49.5063 9.80907 43.0134 9.75922 35.7456C10.0765 33.1113 10.0765 33.1113 10.4845 31.3853C9.85623 31.2204 9.22793 31.0556 8.58059 30.8857C5.36101 29.6312 2.7899 27.9684 0.950689 24.9243C-1.3148 19.3273 0.919551 13.6175 2.96229 8.29485C6.67443 -0.457884 6.67443 -0.457884 13.3858 0.862983ZM8.3086 1.5897C2.83988 11.5897 2.83988 11.5897 1.78083 22.6646C3.71148 26.954 7.04138 28.8364 11.2098 30.6586C11.6885 30.6586 12.1672 30.6586 12.6604 30.6586C12.4211 31.1382 12.1817 31.6179 11.9351 32.112C11.3064 39.7954 12.0367 46.085 16.7403 52.324C20.1628 55.9691 24.724 58.4187 29.7505 58.6828C34.7514 58.3724 39.6026 55.9879 43.1234 52.4603C47.0337 47.2402 48.4072 42.3558 48.2912 35.7911C48.2847 35.2941 48.2781 34.7971 48.2714 34.2851C48.2545 33.0762 48.2285 31.8673 48.2005 30.6586C49.0682 30.2839 49.9358 29.9092 50.8298 29.5231C54.1205 27.8511 56.5213 25.9113 58.3549 22.6646C59.6861 15.6315 55.4841 8.15199 51.8271 2.31643C50.1516 2.55625 48.4762 2.79606 46.7499 3.04315C46.9761 4.07278 47.2029 5.10228 47.4299 6.13172C47.5561 6.70503 47.6823 7.27835 47.8124 7.86904C48.0528 8.93104 48.3143 9.98879 48.6085 11.0371C48.9739 12.7105 48.9963 14.2313 48.9712 15.9425C48.9646 16.5233 48.9581 17.1041 48.9513 17.7025C48.9429 18.1409 48.9345 18.5793 48.9259 19.031C46.2944 20.4338 44.6934 20.8919 41.6728 20.4845C40.1016 19.6541 38.6592 18.7295 37.1991 17.7167C33.7391 15.4622 29.6839 15.7179 25.716 16.1241C22.8552 17.0965 20.5988 18.3444 18.4629 20.4845C16.9188 20.493 16.9188 20.493 15.1537 20.2574C14.5693 20.1852 13.985 20.1131 13.3829 20.0388C11.9351 19.7578 11.9351 19.7578 11.2098 19.031C10.7492 14.5577 11.278 10.7822 12.9098 6.61147C13.5036 5.1243 13.5036 5.1243 13.3858 3.04315C11.2434 1.32096 11.2434 1.32096 8.3086 1.5897Z" fill="#0B0B0B"/>
            <path d="M25.716 19.031C25.716 21.8001 24.9373 22.2751 23.1321 24.2997C21.334 26.572 20.6756 27.4464 20.3215 30.386C22.1139 34.6026 25.6187 36.8918 29.3425 39.3792C29.5656 41.9494 29.3737 44.1832 28.6172 46.6464C29.6943 47.0062 29.6943 47.0062 30.7932 47.3732C30.6669 46.6088 30.6669 46.6088 30.5382 45.8289C30.3169 43.4979 30.287 41.6734 30.7932 39.3792C32.4832 37.4896 34.2201 36.1824 36.318 34.7691C38.2095 33.6086 38.2095 33.6086 39.4968 31.3853C39.6065 26.771 36.5178 23.8082 33.6944 20.4845C34.1731 20.2446 34.6518 20.0048 35.145 19.7577C39.4623 22.7847 43.365 25.5457 45.4353 30.5677C45.2225 34.1219 43.3575 36.1432 40.9475 38.6525C35.9594 43.0128 35.9594 43.0128 33.6944 43.0128C34.1731 44.6916 34.6518 46.3703 35.145 48.0999C33.5584 49.9621 33.5584 49.9621 31.5185 51.7335C29.3134 51.7335 28.1396 51.1409 26.2146 50.0984C24.9907 48.8266 24.9907 48.8266 24.7187 47.0098C24.9907 45.193 24.9907 45.193 26.4413 43.0128C25.913 42.832 25.3848 42.6512 24.8405 42.465C22.6307 41.4771 21.1984 40.3271 19.4149 38.6979C18.5804 37.9462 18.5804 37.9462 17.7291 37.1792C15.8784 35.3394 14.9077 34.1011 14.5587 31.4818C15.1125 26.9409 19.3082 23.5692 22.7666 20.8251C23.7214 20.1827 24.7143 19.5972 25.716 19.031ZM17.7376 27.7517C16.835 29.2412 16.2737 30.2578 16.3323 32.0212C18.3189 36.533 22.346 39.7317 26.4413 42.2861C26.92 42.2861 27.3987 42.2861 27.8919 42.2861C27.8919 41.5667 27.8919 40.8472 27.8919 40.1059C26.5171 38.8149 26.5171 38.8149 24.764 37.6078C21.6182 35.3391 19.5123 33.6468 18.6896 29.7502C18.6148 29.0907 18.54 28.4312 18.4629 27.7517C18.2236 27.7517 17.9842 27.7517 17.7376 27.7517ZM41.6728 28.4784C41.4185 29.3477 41.1642 30.2171 40.9021 31.1128C39.2854 35.4841 35.994 37.6009 32.2438 40.1059C32.4831 40.8254 32.7225 41.5449 32.9691 42.2861C38.4298 38.3302 38.4298 38.3302 43.1234 33.5654C43.4272 31.2322 43.4272 31.2322 43.1234 29.2051C42.6447 28.9653 42.166 28.7255 41.6728 28.4784Z" fill="#101010"/>
            <path d="M29.3426 20.4845C32.0464 21.3875 32.4172 22.2654 33.8757 24.6631C34.4648 25.6018 34.4648 25.6018 35.0657 26.5594C36.0232 28.8431 35.9815 29.8026 35.145 32.1121C33.8436 33.7772 32.36 35.0361 30.7932 36.4724C27.6056 35.4965 25.945 34.298 24.2654 31.3853C24.088 26.6743 26.4424 23.9057 29.3426 20.4845Z" fill="#262626"/>
            <path d="M50.7392 0C55.181 2.11396 56.8228 7.94366 58.5023 12.2748C59.4623 15.0472 59.8941 17.3593 59.8509 20.3028C59.8444 20.8836 59.8378 21.4644 59.8311 22.0628C59.8227 22.5012 59.8142 22.9397 59.8056 23.3914C59.3269 23.3914 58.8482 23.3914 58.355 23.3914C58.2923 22.863 58.2297 22.3347 58.1651 21.7903C57.2139 14.97 54.9331 9.15177 51.8272 3.04315C50.1517 3.04315 48.4763 3.04315 46.75 3.04315C46.9894 3.67267 47.2287 4.30219 47.4753 4.95079C48.1914 7.37237 48.3197 9.25778 48.2006 11.7638C46.75 11.0371 46.75 11.0371 45.9341 8.67525C44.9148 4.2984 44.9148 4.2984 45.2994 2.31643C47.1261 0.747653 48.3398 0.180304 50.7392 0Z" fill="#0B0B0B"/>
            <path d="M29.3426 23.3914C29.8213 23.3914 30.3 23.3914 30.7932 23.3914C32.4142 25.4455 33.564 27.0656 34.0571 29.6593C33.5803 31.9285 32.5327 32.8217 30.7932 34.2922C28.7306 33.3657 27.0669 32.5107 25.7161 30.6586C25.8142 27.807 27.6877 25.6022 29.3426 23.3914Z" fill="#EDEDED"/>
            <path d="M48.2006 9.58362C49.8585 12.906 50.3215 15.3752 49.6512 19.031C47.7976 20.8336 46.498 21.1269 43.9847 21.5745C41.6541 21.2082 40.8764 20.7833 38.9982 19.4852C35.5462 17.1144 31.9836 16.629 27.892 16.1241C27.892 15.8843 27.892 15.6445 27.892 15.3974C32.5234 14.524 35.3341 14.5609 39.4969 16.8508C39.9906 17.2705 40.4842 17.6902 40.9928 18.1226C42.7411 19.4763 42.7411 19.4763 46.75 18.3043C47.2287 15.4265 47.7074 12.5486 48.2006 9.58362Z" fill="#0E0E0E"/>
            <path d="M11.9352 0.863019C11.9352 1.10284 11.9352 1.34266 11.9352 1.58974C10.7384 1.58974 9.54167 1.58974 8.30864 1.58974C7.8247 2.80078 7.34129 4.01204 6.85803 5.22335C6.50555 6.0955 6.15306 6.96766 5.7899 7.86624C3.65556 13.2663 1.80917 18.2207 1.78087 24.1181C1.30217 23.8783 0.823465 23.6385 0.330256 23.3914C-0.498585 15.3821 2.40898 7.47275 6.85803 0.863019C8.79216 -0.105935 9.88024 0.375374 11.9352 0.863019Z" fill="#070707"/>
            <path d="M1.78085 22.6647C2.095 23.1743 2.40915 23.6839 2.73282 24.209C5.59945 27.2816 8.93039 28.7454 12.6605 30.6586C12.4211 34.0161 12.1818 37.3735 11.9352 40.8327C11.6958 40.8327 11.4565 40.8327 11.2099 40.8327C10.9705 37.7151 10.7312 34.5975 10.4845 31.3853C9.04844 30.9057 7.61233 30.4261 6.1327 29.9319C3.70291 28.3854 1.98708 26.9182 1.05554 24.1181C1.29489 23.6385 1.53425 23.1588 1.78085 22.6647Z" fill="#111111"/>
            <path d="M24.9908 27.025C25.4695 27.025 25.9482 27.025 26.4414 27.025C26.3815 27.5646 26.3217 28.1041 26.2601 28.6601C26.4929 31.2266 27.4225 31.9422 29.3426 33.5655C31.4852 32.5687 33.2883 31.3936 35.1451 29.9319C34.8027 33.0191 32.9934 34.4375 30.7932 36.4724C27.5998 35.4947 26.0442 34.2237 24.2655 31.3853C24.0388 29.3868 24.0388 29.3868 24.2655 27.7517C24.5048 27.5119 24.7442 27.272 24.9908 27.025Z" fill="#161616"/>
            <path d="M32.2439 14.6707C32.2439 14.9105 32.2439 15.1504 32.2439 15.3974C31.3898 15.5703 31.3898 15.5703 30.5184 15.7466C25.5881 16.8437 22.4348 18.1436 18.463 21.2112C17.5056 21.2112 16.5482 21.2112 15.5618 21.2112C15.5618 20.7316 15.5618 20.2519 15.5618 19.7578C16.7865 19.046 18.0129 18.3369 19.2478 17.6429C20.4076 16.9826 21.5463 16.2852 22.6789 15.5791C25.8897 14.3175 28.837 14.4886 32.2439 14.6707Z" fill="#090909"/>
            <path d="M48.2006 9.58362C49.9431 12.6617 50.329 15.5499 49.6512 19.031C47.8379 20.5299 47.8379 20.5299 46.0247 21.2112C46.0247 19.031 46.0247 19.031 46.75 18.3043C47.037 16.8413 47.2885 15.3713 47.5206 13.8985C47.7127 12.6943 47.7127 12.6943 47.9088 11.4657C48.0051 10.8446 48.1014 10.2235 48.2006 9.58362Z" fill="#212121"/>
            <path d="M29.3425 39.3793C29.8212 39.3793 30.2999 39.3793 30.7931 39.3793C31.0325 42.0173 31.2718 44.6553 31.5184 47.3732C30.561 47.3732 29.6036 47.3732 28.6172 47.3732C27.5895 44.2842 28.4771 42.4907 29.3425 39.3793Z" fill="#DEDEDE"/>
            <path d="M57.6296 22.6647C58.1083 22.9045 58.587 23.1443 59.0802 23.3914C58.109 26.5763 56.8156 28.1448 54.0031 29.9319C53.285 29.6921 52.567 29.4523 51.8271 29.2052C52.6574 28.3958 52.6574 28.3958 53.5044 27.57C55.0471 25.9885 56.3647 24.4657 57.6296 22.6647Z" fill="#171717"/>
            <path d="M10.4846 11.7638C10.724 11.7638 10.9633 11.7638 11.2099 11.7638C11.2548 12.5432 11.2997 13.3226 11.3459 14.1256C12.0431 17.3496 12.9339 17.9349 15.5618 19.7577C15.5618 20.2374 15.5618 20.717 15.5618 21.2112C11.3006 19.8486 11.3006 19.8486 10.4846 19.031C10.4324 17.8057 10.4238 16.5783 10.4393 15.352C10.4458 14.6841 10.4524 14.0161 10.4591 13.3279C10.4676 12.8118 10.476 12.2956 10.4846 11.7638Z" fill="#272727"/>
            <path d="M40.2222 53.9137C40.7009 54.1535 41.1796 54.3933 41.6728 54.6404C38.5877 58.0848 38.5877 58.0848 36.097 58.9553C35.5435 58.9703 34.99 58.9853 34.4197 59.0008C33.941 58.5211 33.4623 58.0415 32.9691 57.5473C33.4319 57.3459 33.8947 57.1445 34.3716 56.937C34.9709 56.6737 35.5702 56.4105 36.1877 56.1393C36.7851 55.8779 37.3826 55.6166 37.9981 55.3473C39.4563 54.7631 39.4563 54.7631 40.2222 53.9137Z" fill="#1D1D1D"/>
            <path d="M9.03394 29.9319C10.8291 30.2916 10.8291 30.2916 12.6605 30.6586C12.4211 34.0161 12.1818 37.3735 11.9352 40.8327C11.6958 40.8327 11.4565 40.8327 11.2099 40.8327C10.9705 37.7151 10.7312 34.5974 10.4846 31.3853C10.0058 31.3853 9.52715 31.3853 9.03394 31.3853C9.03394 30.9057 9.03394 30.4261 9.03394 29.9319Z" fill="#1F1F1F"/>
            <path d="M32.2438 24.8448C34.4197 25.5715 34.4197 25.5715 35.3263 26.9341C35.8703 28.4784 35.8703 28.4784 35.145 30.6586C34.6663 30.6586 34.1876 30.6586 33.6944 30.6586C32.7829 28.5467 32.2438 27.1732 32.2438 24.8448Z" fill="#1F1F1F"/>
            <path d="M43.1235 33.5655C43.6022 33.8053 44.0809 34.0451 44.5741 34.2922C43.138 35.9709 41.7019 37.6497 40.2222 39.3793C39.7435 38.8996 39.2648 38.42 38.7716 37.9258C40.2077 36.4869 41.6438 35.048 43.1235 33.5655Z" fill="#1C1C1C"/>
            <path d="M39.4969 32.8387C39.4969 35.0189 39.4969 35.0189 38.0463 36.6086C37.5675 37.0433 37.0888 37.478 36.5956 37.9258C36.1169 37.686 35.6382 37.4462 35.145 37.1991C37.8649 33.6563 37.8649 33.6563 39.4969 32.8387Z" fill="#070707"/>
            <path d="M35.8704 15.3974C35.8704 15.877 35.8704 16.3567 35.8704 16.8508C33.2375 16.611 30.6046 16.3712 27.892 16.1241C27.892 15.8843 27.892 15.6445 27.892 15.3974C30.8063 14.7862 32.9822 14.6314 35.8704 15.3974Z" fill="#161616"/>
          </svg>
        <h1 className="text-3xl font-bold">Monsters</h1>
        </div>
      </div>

      

      <div className="flex justify-end gap-4 mb-4 mt-4">
      <button onClick={() => { setPopupType('add'); setShowPopup(true); }} className="bg-emerald-600 text-white px-4 py-2 rounded-md hover:bg-green-700 inline-flex items-center gap-2">
      <svg
      className="w-5 h-5"
      aria-hidden="true"
      xmlns="http://www.w3.org/2000/svg"
      fill="none"
      viewBox="0 0 24 24"
      stroke="currentColor"
      >
      <path
      strokeLinecap="round"
      strokeLinejoin="round"
      strokeWidth="2"
      d="M12 4v16m8-8H4"
      />
      </svg>
        Add New Monster
      </button>
        <div className="relative inline-block text-left">
          <button onClick={() => toggleDropdown("sort")} className={`px-2 py-2 rounded-md ${selectedSort ? 'bg-blue-800 text-white' : 'bg-blue-800 text-white'} hover:bg-blue-700 inline-flex items-center gap-2`}>
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M8 2L7.293 1.293L8 0.585999L8.707 1.293L8 2ZM9 17C9 17.2652 8.89464 17.5196 8.70711 17.7071C8.51957 17.8946 8.26522 18 8 18C7.73478 18 7.48043 17.8946 7.29289 17.7071C7.10536 17.5196 7 17.2652 7 17H9ZM2.293 6.293L7.293 1.293L8.707 2.707L3.707 7.707L2.293 6.293ZM8.707 1.293L13.707 6.293L12.293 7.707L7.293 2.707L8.707 1.293ZM9 2V17H7V2H9ZM16 22L15.293 22.707L16 23.414L16.707 22.707L16 22ZM17 7C17 6.73478 16.8946 6.48043 16.7071 6.29289C16.5196 6.10536 16.2652 6 16 6C15.7348 6 15.4804 6.10536 15.2929 6.29289C15.1054 6.48043 15 6.73478 15 7H17ZM10.293 17.707L15.293 22.707L16.707 21.293L11.707 16.293L10.293 17.707ZM16.707 22.707L21.707 17.707L20.293 16.293L15.293 21.293L16.707 22.707ZM17 22V7H15V22H17Z" fill="white"/>
          </svg>
            Sort By
          </button>
          {dropdownVisible.sort && (
            <div className="absolute right-0 mt-2 w-36 bg-white border rounded-md shadow-lg">
              <button className={`block px-4 py-2 ${selectedSort === "name" ? 'bg-gray-300' : 'text-gray-800 hover:bg-gray-200'}`} onClick={() => handleSortBy("name")}>
                Name
              </button>
              <button className={`block px-4 py-2 ${selectedSort === "hp" ? 'bg-gray-300' : 'text-gray-800 hover:bg-gray-200'}`} onClick={() => handleSortBy("hp")}>
                HP
              </button>
              <button className="block px-4 py-2 text-gray-800 hover:bg-gray-200" onClick={undoSort}>
                Undo Sort
              </button>
            </div>
          )}
        </div>

        <div className="relative inline-block text-left">
          <button onClick={() => toggleDropdown("filterType")} className={`px-2 py-2 rounded-md ${selectedFilters.type ? 'bg-blue-800 text-white' : 'bg-blue-800 text-white'} hover:bg-blue-700 inline-flex items-center gap-2`}>
          <svg xmlns="http://www.w3.org/2000/svg" width="25" height="25" viewBox="0 0 25 25" fill="none">
              <path d="M6.32484 5.57324C7.0254 5.69767 7.23282 5.99931 7.67829 6.54294C7.8145 6.70609 7.95071 6.86923 8.09104 7.03732C8.24324 7.22766 8.24324 7.22766 8.39851 7.42184C8.5473 7.3229 8.5473 7.3229 8.69911 7.22195C8.83355 7.13484 8.968 7.04773 9.10652 6.95798C9.23794 6.87187 9.36936 6.78577 9.50477 6.69705C10.898 5.92822 12.1379 5.99304 13.6719 6.24997C14.8355 6.60871 15.5189 7.21741 16.211 8.20309C16.3077 8.49313 16.3077 8.49313 16.4063 8.78903C17.0692 8.50492 17.4767 8.14006 17.9688 7.61716C18.6373 6.90688 19.1338 6.51295 20.1051 6.34763C20.7032 6.44528 20.7032 6.44528 21.2647 6.97018C21.8315 7.85376 21.8315 7.85376 21.6798 8.59372C21.3868 9.14304 21.3868 9.14304 21.0938 9.57028C21.2469 9.56223 21.4 9.55417 21.5577 9.54587C22.0704 9.57028 22.0704 9.57028 22.461 9.96091C22.5637 10.6969 22.5483 11.0163 22.0971 11.618C21.9392 11.764 21.7814 11.9101 21.6187 12.0605C21.4624 12.2086 21.306 12.3566 21.1449 12.5091C20.7032 12.8906 20.7032 12.8906 20.1173 13.2812C20.1495 13.4101 20.1817 13.539 20.2149 13.6718C20.3806 14.6662 20.3915 15.6241 20.1173 16.6015C20.2351 16.6229 20.3529 16.6443 20.4743 16.6664C22.1655 17.0019 22.1655 17.0019 22.6563 17.5781C22.7507 18.1174 22.7598 18.4058 22.4436 18.8607C21.895 19.2721 21.3749 19.312 20.7009 19.4198C20.4251 19.4668 20.1493 19.5139 19.8735 19.561C19.4413 19.6319 19.0089 19.7017 18.5764 19.7703C16.4437 20.0799 16.4437 20.0799 14.564 21.0778C13.4494 21.847 11.6451 21.6166 10.3516 21.4843C7.80825 21.0093 5.21191 19.9585 3.71101 17.7734C3.02316 16.5752 2.9038 15.359 3.23036 14.022C3.58631 12.9992 4.11339 12.0976 4.88288 11.3281C4.68159 11.2427 4.68159 11.2427 4.47624 11.1557C3.04304 10.5037 3.04304 10.5037 2.50251 9.7778C2.31344 9.06514 2.28733 8.70395 2.53913 8.00778C3.11418 7.40599 3.47534 7.06489 4.30915 6.94577C5.3003 6.75598 5.37144 5.75923 6.32484 5.57324Z" fill="#F3F3F3"/>
              <path d="M7.4463 4.66993C7.62758 4.78134 7.62758 4.78134 7.81251 4.895C8.54126 5.28997 8.95241 5.31838 9.76564 5.07811C10.5694 4.8538 11.3527 4.83967 12.1826 4.83397C12.3276 4.82994 12.4727 4.82591 12.6221 4.82176C13.5803 4.81499 14.1994 4.96275 15.0391 5.46873C15.1642 5.54174 15.2893 5.61476 15.4183 5.68998C15.5227 5.75393 15.6272 5.81788 15.7349 5.88377C16.5195 6.32734 16.5195 6.32734 17.3828 6.44529C17.7173 6.19655 18.0423 5.9347 18.3594 5.66404C19.3186 5.20623 20.2749 5.16184 21.2891 5.46873C22.2585 6.06012 22.5452 6.7362 22.9004 7.76365C22.9503 7.89608 23.0001 8.02852 23.0515 8.16496C23.4672 9.31593 23.784 10.4305 23.4253 11.6333C23.116 12.182 22.8545 12.536 22.4365 12.9883C21.8478 13.6463 21.6292 14.1295 21.6797 15.039C22.0999 15.5793 22.4348 15.9244 23.0713 16.1865C23.6928 16.5594 23.8087 17.1067 24.0235 17.7734C23.9842 18.5773 23.6607 19.2398 23.2422 19.9219C22.8123 20.1042 22.5326 20.1172 22.0703 20.1172C22.0703 20.2461 22.0703 20.375 22.0703 20.5078C21.2121 20.7048 20.3535 20.8995 19.4946 21.0937C19.2513 21.1496 19.008 21.2055 18.7573 21.2631C18.4051 21.3424 18.4051 21.3424 18.0458 21.4233C17.83 21.4724 17.6142 21.5215 17.3918 21.5721C16.851 21.6699 16.3679 21.7011 15.8203 21.6797C15.8203 21.8086 15.8203 21.9375 15.8203 22.0703C12.9052 23.2863 9.92983 23.0839 7.03727 21.9148C3.79461 20.4905 3.79461 20.4905 3.12501 18.9453C3.03387 18.8615 2.94273 18.7776 2.84883 18.6912C2.01818 17.8013 1.70917 16.3863 1.67237 15.1977C1.70472 14.4116 1.89018 13.7836 2.20033 13.0653C2.42183 12.4939 2.47579 11.9356 2.53907 11.3281C2.42225 11.2959 2.30543 11.2637 2.18507 11.2305C1.51349 10.7699 1.33798 10.1547 1.17189 9.37498C1.14015 8.37429 1.38783 7.46837 1.95314 6.64061C2.47804 6.46971 2.47804 6.46971 2.9297 6.44529C2.99415 6.25193 3.05861 6.05858 3.12501 5.85936C3.55868 5.59112 3.97516 5.3618 4.43116 5.13914C4.55088 5.07658 4.6706 5.01401 4.79394 4.94955C5.70698 4.49545 6.47937 4.25579 7.4463 4.66993ZM5.16664 6.55211C4.73326 6.98548 4.27082 7.02072 3.68501 7.13347C3.11762 7.27828 2.8684 7.53357 2.53907 8.00779C2.31544 8.6936 2.31746 9.08054 2.50245 9.77781C3.12554 10.6145 3.93806 10.9275 4.88282 11.3281C4.80503 11.4228 4.72723 11.5174 4.64708 11.615C3.58503 12.9587 2.98134 14.1571 3.04567 15.9019C3.2739 17.3525 4.05594 18.5095 5.19029 19.4153C7.71852 21.0763 10.4847 21.768 13.4766 21.4844C14.3788 21.248 15.155 20.9778 15.8203 20.3125C16.2838 20.2039 16.7363 20.1154 17.2051 20.0386C17.486 19.9892 17.7668 19.9397 18.0477 19.8902C18.4908 19.814 18.934 19.7386 19.3773 19.664C19.8051 19.5915 20.2324 19.5161 20.6597 19.4404C20.7921 19.4191 20.9246 19.3977 21.061 19.3756C21.5993 19.2793 22.0037 19.1908 22.4446 18.8587C22.6889 18.548 22.6889 18.548 22.7661 18.0786C22.6966 17.526 22.6966 17.526 22.1558 17.1387C21.4526 16.7806 20.8992 16.6641 20.1172 16.6015C20.1494 16.5049 20.1817 16.4082 20.2149 16.3086C20.3841 15.4624 20.4245 14.5987 20.1546 13.7771C20.1172 13.2812 20.1172 13.2812 20.5116 12.8151C20.6917 12.6668 20.8717 12.5185 21.0571 12.3657C21.2356 12.2159 21.4142 12.0661 21.5981 11.9118C21.8318 11.7195 21.8318 11.7195 22.0703 11.5234C22.5226 11.1553 22.5226 11.1553 22.5098 10.5469C22.5226 9.93846 22.5226 9.93846 22.0703 9.57029C21.5657 9.5377 21.5657 9.5377 21.0938 9.57029C21.2448 9.37089 21.2448 9.37089 21.3989 9.16746C21.7662 8.41692 21.7022 8.02511 21.4844 7.22654C21.183 6.7298 21.183 6.7298 20.7031 6.44529C19.9776 6.31912 19.6228 6.39753 18.9697 6.73826C18.2856 7.23778 17.7146 7.8598 17.1356 8.47471C16.7969 8.78904 16.7969 8.78904 16.4063 8.78904C16.3338 8.61583 16.2612 8.44261 16.1865 8.26414C15.592 7.21388 14.8013 6.63301 13.6719 6.24998C12.0418 5.95015 10.8049 5.97576 9.37501 6.83592C9.10914 6.99453 9.10914 6.99453 8.8379 7.15635C8.69288 7.24397 8.54786 7.33159 8.39845 7.42186C8.29699 7.29496 8.19552 7.16807 8.09098 7.03734C7.95478 6.87419 7.81857 6.71104 7.67823 6.54295C7.54454 6.3798 7.41085 6.21666 7.27311 6.04857C6.86638 5.62353 6.86638 5.62353 6.32325 5.57402C5.69201 5.69653 5.53374 6.05489 5.16664 6.55211Z" fill="#1E1B4B"/>
              <path d="M13.4766 11.5234C14.9162 12.5298 16.0085 13.8891 16.4063 15.625C16.5377 16.9389 16.2718 17.9844 15.6251 19.1406C14.8863 20.0089 13.9723 20.4504 12.8503 20.5803C10.0881 20.6311 7.44338 19.9627 5.27351 18.164C4.36427 17.1755 4.02541 16.2456 4.049 14.9223C4.20013 13.5753 4.97566 12.6506 6.00746 11.8248C8.14474 10.354 11.2244 10.1527 13.4766 11.5234Z" fill="#363636"/>
              <path d="M6.44531 6.83594C7.21195 7.55877 7.80191 8.31047 8.39844 9.17969C8.5354 9.0387 8.67236 8.89771 8.81348 8.75244C8.90512 8.66432 8.99677 8.5762 9.09119 8.48541C9.35548 8.22254 9.59837 7.93861 9.83887 7.65381C10.6707 6.97146 11.7418 7.09676 12.7625 7.12891C13.6963 7.25661 14.3633 7.5434 15.0391 8.20313C15.3036 8.73219 15.2471 9.18151 15.2344 9.76563C15.4942 9.73541 15.4942 9.73541 15.7593 9.70459C16.4062 9.76563 16.4062 9.76563 16.9556 10.1929C17.3914 10.7533 17.4717 11.0381 17.5781 11.7188C17.811 11.6319 18.0439 11.545 18.2838 11.4555C18.5897 11.3438 18.8957 11.2322 19.2017 11.1206C19.3551 11.0631 19.5086 11.0055 19.6667 10.9463C19.8146 10.8928 19.9625 10.8393 20.1149 10.7841C20.2509 10.734 20.387 10.6839 20.5271 10.6323C20.8984 10.5469 20.8984 10.5469 21.4844 10.7422C21.3502 10.8623 21.216 10.9824 21.0777 11.1061C20.9017 11.264 20.7258 11.4218 20.5444 11.5845C20.37 11.7408 20.1955 11.8972 20.0157 12.0583C19.6486 12.393 19.2918 12.7302 18.9453 13.0859C19.042 13.3337 19.042 13.3337 19.1406 13.5864C19.3567 14.3292 19.417 14.855 19.3359 15.625C19.0781 16.0762 18.8203 16.5273 18.5547 16.9922C19.5859 17.3145 20.6172 17.6367 21.6797 17.9688C21.1118 18.3474 20.8249 18.4455 20.1736 18.5684C19.9949 18.6024 19.8161 18.6364 19.632 18.6714C19.4456 18.7054 19.2593 18.7394 19.0674 18.7744C18.8826 18.8099 18.6978 18.8454 18.5074 18.882C17.662 19.0399 16.8782 19.1604 16.0156 19.1406C16.072 19.0037 16.1284 18.8667 16.1865 18.7256C16.919 16.8537 17.0186 15.6903 16.2743 13.8046C15.4939 12.2255 14.1982 11.1335 12.5481 10.553C10.7569 10.0486 9.05113 10.0179 7.22656 10.3516C7.09546 9.87572 6.9654 9.39963 6.83594 8.92334C6.78004 8.72111 6.78004 8.72111 6.72302 8.51479C6.56696 7.93791 6.44531 7.43641 6.44531 6.83594Z" fill="#383838"/>
              <path d="M7.81243 13.8672C8.37243 13.9792 8.56662 14.0354 8.9843 14.4531C9.03767 15.3586 8.89229 16.0576 8.38616 16.8091C8.19884 16.9964 8.19884 16.9964 8.00774 17.1875C7.64153 17.1265 7.64153 17.1265 7.22649 16.9922C6.73576 16.2561 6.73232 15.9118 6.83586 15.0391C7.12101 14.584 7.43375 14.2553 7.81243 13.8672Z" fill="#F5F5F5"/>
              <path d="M12.8174 15.5396C13.2812 15.625 13.2812 15.625 13.6719 16.0156C13.704 16.8084 13.5776 17.5555 13.2446 18.2739C12.7337 18.6792 12.3511 18.6234 11.7187 18.5547C11.4141 18.25 11.4757 17.9514 11.4624 17.5293C11.4709 16.8604 11.5196 16.6085 11.853 16.0034C12.3047 15.625 12.3047 15.625 12.8174 15.5396Z" fill="#F8F8F8"/>
              <path d="M3.90625 8.00781C4.28162 8.01926 4.28162 8.01926 4.6875 8.20313C5.02014 8.64944 5.02014 8.64944 5.32227 9.19189C5.42398 9.37141 5.5257 9.55092 5.63049 9.73587C5.70602 9.8746 5.78156 10.0133 5.85938 10.1563C5.37376 10.3334 5.15056 10.3793 4.66003 10.1913C4.25102 9.93836 3.87458 9.69568 3.51562 9.375C3.39355 8.8501 3.39355 8.8501 3.51562 8.39844C3.64453 8.26953 3.77344 8.14063 3.90625 8.00781Z" fill="#3F3F3F"/>
              <path d="M20.1553 7.48827C20.2717 7.53082 20.388 7.57337 20.5078 7.61721C20.2785 8.59162 19.6908 8.98178 18.9209 9.54363C18.5547 9.76565 18.5547 9.76565 18.1641 9.76565C18.3868 8.83033 18.7602 8.29423 19.4077 7.61797C19.7266 7.4219 19.7266 7.4219 20.1553 7.48827Z" fill="#424242"/>
          </svg>
            Filter by Type
          </button>
          {dropdownVisible.filterType && (
            <div className="absolute right-0 mt-2 w-36 bg-white border rounded-md shadow-lg">
              {uniqueTypes.map((type) => (
                <button key={type} className={`block px-4 py-2 ${selectedFilters.type === type ? 'bg-gray-300' : 'text-gray-800 hover:bg-gray-200'}`} onClick={() => handleFilterBy("type", type)}>
                  {type}
                </button>
              ))}
            </div>
          )}
        </div>

        <div className="relative inline-block text-left">
          <button onClick={() => toggleDropdown("filterElemental")} className={`px-2 py-2 rounded-md ${selectedFilters.elemental ? 'bg-blue-800 text-white' : 'bg-blue-800 text-white'} hover:bg-blue-700 inline-flex items-center gap-2`}>
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
          <path d="M11.944 1.31824C12.1075 1.49224 12.589 2.15224 12.982 2.74474C13.6525 3.75274 13.891 4.53124 13.702 5.09524C13.5805 5.45674 13.354 5.73274 12.8005 6.19474C12.6355 6.33424 12.4525 6.49774 12.3955 6.55774C11.9875 6.99724 11.6185 7.59274 11.491 8.02174C11.41 8.29474 11.3935 8.41324 11.3935 8.69224C11.395 8.91874 11.3995 8.96374 11.434 9.09724C11.485 9.29074 11.6365 9.59374 11.77 9.77224C11.9035 9.95074 12.1975 10.2447 12.3745 10.3752C12.5436 10.5 12.6625 10.5627 12.6625 10.5627C12.6625 10.5627 12.6046 10.4974 12.5605 10.4547C12.3955 10.2927 12.1615 9.96574 12.067 9.76174C11.803 9.18724 11.848 8.53024 12.1975 7.87474C12.46 7.38124 12.913 6.85474 13.4425 6.42724C13.4976 6.38302 13.6537 6.27392 13.8165 6.16345C14.0347 6.01533 14.2968 5.85766 14.2968 5.85766C14.2968 5.85766 14.3035 5.84974 14.2105 6.20074C14.065 6.75424 14.0425 6.84274 13.9945 7.04974C13.87 7.59124 13.8355 7.87774 13.849 8.28574C13.8625 8.67874 13.9165 8.98924 14.0425 9.37324C14.3245 10.2402 14.8855 11.0712 15.781 11.9472C15.9529 12.1147 16.0615 12.2052 16.0615 12.2052C16.0615 12.2052 16.0485 12.1117 16.0345 12.0312C16.0015 11.8407 15.895 11.5812 15.7675 11.3862C15.7375 11.3397 15.604 11.1567 15.4705 10.9782C15.337 10.7997 15.196 10.5942 15.1555 10.5222C15.0145 10.2612 14.9035 9.93724 14.8465 9.61474C14.8039 9.40681 14.8101 9.00909 14.854 8.81374C14.938 8.39824 15.1765 7.89274 15.5815 7.27624C15.6338 7.19674 15.7023 7.10821 15.7628 7.03866C15.8255 6.96648 15.9039 6.90447 15.9039 6.90447C15.9039 6.90447 15.916 6.91774 15.9505 7.12624C16.0135 7.51024 16.3045 8.31274 16.552 8.78524C16.9645 9.56974 17.4835 10.1547 18.517 10.9992C18.9295 11.3367 19.057 11.4537 19.24 11.6577C19.768 12.2457 20.275 13.0167 20.545 13.6422C20.686 13.9677 20.8105 14.3847 20.86 14.7012C20.9064 14.9567 20.9036 15.3957 20.86 15.6087C20.788 15.9942 20.6245 16.3782 20.362 16.7697C19.96 17.3712 19.5415 17.7837 18.7345 18.3702C18.112 18.8217 17.6635 19.1022 16.8445 19.5522C15.373 20.3592 15.0805 20.5332 14.497 20.9442C13.9555 21.3267 12.9385 22.1397 12.5995 22.4622C12.5295 22.5288 12.4696 22.5848 12.4186 22.6311C12.2698 22.7665 12.188 22.8245 12.188 22.8245C12.188 22.8245 12.0504 22.7127 11.8927 22.5845C11.8484 22.5485 11.801 22.5098 11.752 22.4697C11.335 22.1262 10.7905 21.7077 10.132 21.2247C9.9265 21.0732 9.7105 20.9142 9.652 20.8722C9.1375 20.4927 8.764 20.2587 7.999 19.8357C7.447 19.5297 7.0495 19.3032 6.3895 18.9147C4.717 17.9307 3.9535 17.3742 3.6115 16.8897C3.1825 16.2822 3.022 15.6057 3.148 14.9337C3.229 14.5047 3.4045 13.9242 3.577 13.5147C3.685 13.2567 3.9085 12.8097 4.0465 12.5757C4.429 11.9202 4.7425 11.4882 5.737 10.2447C6.58 9.19174 6.844 8.83624 7.159 8.33074C7.3765 7.98274 7.639 7.48924 7.7635 7.19524C7.7875 7.13974 7.82349 7.08161 7.82349 7.08161C7.82349 7.08161 7.8295 7.18474 7.8355 7.29274C7.861 7.77574 7.951 8.15374 8.1355 8.54224C8.4355 9.17224 8.9695 9.72874 9.7495 10.2177C10.2595 10.5372 10.789 10.7892 11.77 11.1822C11.971 11.2617 12.1507 11.3443 12.1507 11.3443C12.1507 11.3443 12.0175 11.3547 11.8945 11.3547C11.1505 11.3547 10.315 11.5527 9.652 11.8842C8.341 12.5397 7.519 13.6527 7.279 15.0972C7.258 15.2247 7.252 15.3417 7.252 15.6147C7.2535 15.9402 7.2565 15.9822 7.294 16.1577C7.3735 16.5327 7.5115 16.8867 7.705 17.2122C7.8475 17.4552 7.9345 17.5722 8.188 17.8692C8.305 18.0087 8.41052 18.138 8.41052 18.138C8.41052 18.138 8.22145 18.0864 8.0515 17.9982C7.9075 17.9262 7.705 17.8032 7.5175 17.6742C7.438 17.6202 7.3075 17.5317 7.2295 17.4777C5.6905 16.4247 5.014 15.1182 5.296 13.7472C5.4295 13.1037 5.743 12.4677 6.2275 11.8602C6.3415 11.7177 6.43935 11.5888 6.43935 11.5888C6.43935 11.5888 6.35692 11.614 6.29344 11.6464C6.23038 11.6786 6.1553 11.7224 6.094 11.7642C5.863 11.9217 5.3785 12.3207 5.197 12.5022C4.6645 13.0332 4.339 13.6227 4.2205 14.2722C4.1815 14.4837 4.1815 15.0177 4.2205 15.2322C4.297 15.6537 4.423 16.0122 4.6015 16.3122C4.69 16.4622 4.8925 16.7232 5.041 16.8807C5.4535 17.3172 5.9875 17.6862 6.8845 18.1572C7.045 18.2412 7.3225 18.3867 7.4995 18.4797C7.6765 18.5727 7.933 18.7107 8.0695 18.7872C8.206 18.8622 8.722 19.1397 9.217 19.4022C10.3045 19.9797 10.5205 20.1102 11.422 20.7447C11.6759 20.9236 11.8365 21.0361 11.938 21.1051C12.0638 21.1906 12.0937 21.2162 12.0937 21.2162C12.0937 21.2162 12.1755 21.1642 12.2728 21.1005C12.3866 21.0261 12.5492 20.9189 12.727 20.8017C13.057 20.5827 13.5595 20.2512 13.8445 20.0622C14.6635 19.5207 14.8615 19.4037 16.0645 18.7572C17.62 17.9202 18.487 17.4057 18.907 17.0682C19.1755 16.8537 19.468 16.5402 19.627 16.2972C19.771 16.0767 19.933 15.7167 20.017 15.4272C20.0755 15.2217 20.0995 15.0447 20.0995 14.7957C20.0995 14.5452 20.0785 14.3967 20.0125 14.1672C19.87 13.6812 19.606 13.2612 19.162 12.8157C18.9205 12.5727 18.7735 12.4452 18.5335 12.2742C18.468 12.2278 18.3814 12.1704 18.298 12.1174C18.158 12.0284 18.0085 11.944 18.0085 11.944C18.0085 11.944 18.0499 12.0486 18.0993 12.1714C18.1184 12.2188 18.14 12.2716 18.163 12.3267C18.4345 12.9837 18.58 13.4952 18.6535 14.0622C18.6985 14.3917 18.6985 14.8944 18.655 15.1122C18.592 15.5142 18.49 15.8367 18.307 16.2087C17.839 17.1582 16.9975 17.9367 15.796 18.5307C14.908 18.9702 14.077 19.2117 13.1545 19.2987C12.6677 19.3326 12.1755 19.3374 11.8345 19.2837C11.3455 19.2132 10.7125 19.0332 10.2445 18.8322C10.0705 18.7572 9.691 18.5607 9.5545 18.4722C9.1 18.1812 8.7745 17.8392 8.5855 17.4522C8.308 16.8822 8.35 16.2492 8.7025 15.7392C8.965 15.3582 9.397 15.0927 9.8695 15.0207C10.0675 14.9907 10.1845 14.9937 10.57 15.0372C10.7287 15.0557 10.8455 15.0661 10.9275 15.0835C11.0122 15.1014 11.0847 15.1436 11.0847 15.1436C11.0847 15.1436 11.041 15.1722 11.0065 15.1887C10.939 15.2187 10.6375 15.4617 10.5055 15.5922C10.3405 15.7557 10.1635 16.0377 10.0705 16.2852C9.781 17.0547 10.0105 17.9157 10.6195 18.3432C10.9855 18.5997 11.515 18.7722 12.1105 18.8262C12.3415 18.8487 12.916 18.8337 13.117 18.8022C13.342 18.7677 13.6945 18.6822 13.9675 18.5982C14.755 18.3552 15.364 18.0117 15.817 17.5572C16.1215 17.2527 16.354 16.8897 16.5055 16.4817C16.798 15.6957 16.7155 14.6952 16.288 13.8012C16.177 13.5687 16.072 13.4112 15.895 13.2117C15.8185 13.1262 15.7045 12.9957 15.6415 12.9222C15.241 12.4512 14.7625 12.0972 14.0395 11.7357C13.6765 11.5557 13.423 11.4462 12.5935 11.1087C11.3725 10.6122 10.951 10.4082 10.4395 10.0647C9.6265 9.52024 9.121 8.81374 8.9365 7.96474C8.9065 7.82674 8.89573 7.70576 8.89609 7.48016C8.89645 7.25994 8.908 7.12624 8.9365 7.00024C9.064 6.42424 9.3325 5.93224 9.958 5.12224C10.687 4.17874 10.9705 3.76174 11.2255 3.25474C11.5285 2.65474 11.722 1.97374 11.767 1.35424C11.773 1.28224 11.7873 1.17551 11.7873 1.17551C11.7873 1.17551 11.833 1.20124 11.944 1.31824ZM11.619 12.4812C11.478 12.5022 11.11 12.6012 10.9495 12.6537C10.888 12.6747 10.7665 12.7287 10.6795 12.7737C10.2445 13.0002 9.8905 13.3512 9.5995 13.8447C9.53818 13.9491 9.46714 14.0808 9.41578 14.1831C9.37039 14.2735 9.3369 14.363 9.3369 14.363C9.3369 14.363 9.421 14.3202 9.502 14.2812C9.781 14.1462 10.09 14.0457 10.4245 13.9842C10.534 13.9647 10.6495 13.9587 10.927 13.9572C11.2375 13.9572 11.311 13.9617 11.4625 13.9917C12.0145 14.0967 12.4555 14.3292 12.826 14.7102C13.1395 15.0327 13.321 15.3897 13.3975 15.8322C13.4395 16.0767 13.429 16.4067 13.375 16.6212C13.303 16.8987 13.189 17.1177 13.021 17.3007C12.9612 17.3657 12.9272 17.4156 12.9272 17.4156C12.9272 17.4156 13.0101 17.4247 13.1695 17.3627C13.2567 17.3314 13.3603 17.2871 13.4665 17.2347C15.064 16.4487 15.5305 15.5622 15.019 14.2872C14.6995 13.4907 14.1145 12.9387 13.3 12.6672C13.0165 12.5727 12.787 12.5247 12.4045 12.4797C12.232 12.4587 11.766 12.4572 11.619 12.4812Z" fill="white"/>
          </svg>
            Filter by Elemental
          </button>
          {dropdownVisible.filterElemental && (
            <div className="absolute right-0 mt-2 w-36 bg-white border rounded-md shadow-lg">
              {uniqueElementals.map((elemental) => (
                <button key={elemental} className={`block px-4 py-2 ${selectedFilters.elemental === elemental ? 'bg-gray-300' : 'text-gray-800 hover:bg-gray-200'}`} onClick={() => handleFilterBy("elemental", elemental)}>
                  {elemental}
                </button>
              ))}
            </div>
          )}
        </div>

        <button onClick={undoFilter} className="bg-red-800 text-white px-4 py-2 rounded-md hover:bg-red-700 inline-flex items-center gap-2">
        <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
        <path d="M7 19V17H14.1C15.15 17 16.0627 16.6667 16.838 16C17.6133 15.3333 18.0007 14.5 18 13.5C17.9993 12.5 17.612 11.6667 16.838 11C16.064 10.3333 15.1513 10 14.1 10H7.8L10.4 12.6L9 14L4 9L9 4L10.4 5.4L7.8 8H14.1C15.7167 8 17.1043 8.525 18.263 9.575C19.4217 10.625 20.0007 11.9333 20 13.5C19.9993 15.0667 19.4203 16.375 18.263 17.425C17.1057 18.475 15.718 19 14.1 19H7Z" fill="white"/>
        </svg>
          Undo Filter
        </button>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
        {monsters.map((monster) => (
          <div key={monster.id} className="bg-indigo-100 shadow-lg rounded-lg overflow-hidden">
            <div className="flex justify-end space-x-2 p-2">
              <button onClick={() => deleteMonster(monster)} className="bg-red-900 text-white px-2 py-1 rounded hover:bg-red-700 inline-flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" width="16" height="20" viewBox="0 0 16 20" fill="none">
              <path fillRule="evenodd" clipRule="evenodd" d="M4.586 0.586C4.96099 0.210901 5.46961 0.000113275 6 0H10C10.5304 0 11.0391 0.210714 11.4142 0.585786C11.7893 0.960859 12 1.46957 12 2V4H15C15.2652 4 15.5196 4.10536 15.7071 4.29289C15.8946 4.48043 16 4.73478 16 5C16 5.26522 15.8946 5.51957 15.7071 5.70711C15.5196 5.89464 15.2652 6 15 6V18C15 18.5304 14.7893 19.0391 14.4142 19.4142C14.0391 19.7893 13.5304 20 13 20H3C2.46957 20 1.96086 19.7893 1.58579 19.4142C1.21071 19.0391 1 18.5304 1 18V6C0.734784 6 0.48043 5.89464 0.292893 5.70711C0.105357 5.51957 0 5.26522 0 5C0 4.73478 0.105357 4.48043 0.292893 4.29289C0.48043 4.10536 0.734784 4 1 4H4V2C4.00011 1.46961 4.2109 0.960985 4.586 0.586ZM6 4H10V2H6V4ZM7 8C7 7.73478 6.89464 7.48043 6.70711 7.29289C6.51957 7.10536 6.26522 7 6 7C5.73478 7 5.48043 7.10536 5.29289 7.29289C5.10536 7.48043 5 7.73478 5 8V16C5 16.2652 5.10536 16.5196 5.29289 16.7071C5.48043 16.8946 5.73478 17 6 17C6.26522 17 6.51957 16.8946 6.70711 16.7071C6.89464 16.5196 7 16.2652 7 16V8ZM11 8C11 7.73478 10.8946 7.48043 10.7071 7.29289C10.5196 7.10536 10.2652 7 10 7C9.73478 7 9.48043 7.10536 9.29289 7.29289C9.10536 7.48043 9 7.73478 9 8V16C9 16.2652 9.10536 16.5196 9.29289 16.7071C9.48043 16.8946 9.73478 17 10 17C10.2652 17 10.5196 16.8946 10.7071 16.7071C10.8946 16.5196 11 16.2652 11 16V8Z" fill="white"/>
              </svg>
              </button>
              <button onClick={() => startEditMode(monster)} className="bg-amber-500 text-white px-2 py-1 rounded hover:bg-yellow-600 inline-flex items-center gap-2">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
              <path d="M16.475 5.40801L18.592 7.52501M17.836 3.54301L12.109 9.27001C11.8122 9.56485 11.6102 9.94162 11.529 10.352L11 13L13.648 12.47C14.058 12.388 14.434 12.187 14.73 11.891L20.457 6.16401C20.6291 5.99191 20.7656 5.7876 20.8588 5.56275C20.9519 5.33789 20.9998 5.09689 20.9998 4.85351C20.9998 4.61013 20.9519 4.36913 20.8588 4.14427C20.7656 3.91942 20.6291 3.71511 20.457 3.54301C20.2849 3.37091 20.0806 3.2344 19.8557 3.14126C19.6309 3.04812 19.3899 3.00018 19.1465 3.00018C18.9031 3.00018 18.6621 3.04812 18.4373 3.14126C18.2124 3.2344 18.0081 3.37091 17.836 3.54301Z" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              <path d="M19 15V18C19 18.5304 18.7893 19.0391 18.4142 19.4142C18.0391 19.7893 17.5304 20 17 20H6C5.46957 20 4.96086 19.7893 4.58579 19.4142C4.21071 19.0391 4 18.5304 4 18V7C4 6.46957 4.21071 5.96086 4.58579 5.58579C4.96086 5.21071 5.46957 5 6 5H9" stroke="white" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
              </svg>
              </button>
            </div>
            {/* <Image
              src={monster.img}
              alt={monster.name}
              width={500} // you can set appropriate width
              height={200} // you can set appropriate height
              className="w-full h-48 object-cover"
            /> */}
            <img src={monster.img} alt={monster.name} className="w-full h-48 object-cover" />

            <div className="p-4 flex flex-col items-center">
              <h2 className="text-indigo-950 text-xl font-semibold">{monster.name}</h2>
              <p className="text-gray-600">Type: {monster.type}</p>
              <p className="text-gray-600">Elemental: {monster.elemental || 'None'}</p>
              <p className="text-gray-600">HP: {monster.hp}</p>
              <button onClick={() => viewMonsterInfo(monster)} className="bg-indigo-900 text-white px-4 py-2 rounded-md mt-4 hover:bg-indigo-700">
                View Info
              </button>
            </div>
          </div>
        ))}
      </div>

      {showPopup && (
        <div className="fixed inset-0 bg-black bg-opacity-50 flex justify-center items-center">
          <div className="bg-indigo-50 p-6 rounded-lg shadow-lg relative w-full max-w-md">
            <button onClick={closePopup} className="absolute top-2 right-2 bg-red-900 text-white px-4 py-2 rounded-md hover:bg-red-700">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none">
                <path d="M13.5909 12L18.0441 7.54687C18.2554 7.3359 18.3743 7.04962 18.3745 6.75099C18.3748 6.45237 18.2564 6.16587 18.0455 5.95453C17.8345 5.74319 17.5482 5.62431 17.2496 5.62404C16.951 5.62378 16.6645 5.74215 16.4531 5.95312L12 10.4062L7.54687 5.95312C7.33553 5.74178 7.04888 5.62305 6.75 5.62305C6.45111 5.62305 6.16447 5.74178 5.95312 5.95312C5.74178 6.16447 5.62305 6.45111 5.62305 6.75C5.62305 7.04888 5.74178 7.33553 5.95312 7.54687L10.4062 12L5.95312 16.4531C5.74178 16.6645 5.62305 16.9511 5.62305 17.25C5.62305 17.5489 5.74178 17.8355 5.95312 18.0469C6.16447 18.2582 6.45111 18.3769 6.75 18.3769C7.04888 18.3769 7.33553 18.2582 7.54687 18.0469L12 13.5937L16.4531 18.0469C16.6645 18.2582 16.9511 18.3769 17.25 18.3769C17.5489 18.3769 17.8355 18.2582 18.0469 18.0469C18.2582 17.8355 18.3769 17.5489 18.3769 17.25C18.3769 16.9511 18.2582 16.6645 18.0469 16.4531L13.5909 12Z" fill="#F8F8F8"/>
            </svg>
            </button>
            {popupType === 'view' && selectedMonster && (
              <>
                {/* <Image
                  src={selectedMonster.img} 
                  alt={selectedMonster.name}
                  width={500} // you can set appropriate width
                  height={200} // you can set appropriate height
                  className="w-full h-48 object-cover"
                /> */}
                <img src={selectedMonster.img} alt={selectedMonster.name} className="w-32 h-32 object-cover mx-auto" />

                <h2 className="text-indigo-950 text-2xl font-bold text-center mt-2">{selectedMonster.name}</h2>
                <p className="text-gray-800 text-center mt-2">{selectedMonster.description}</p>
                <div className="mt-4 space-y-2 text-center">
                  <p className="text-indigo-950"><strong>Type:</strong> {selectedMonster.type}</p>
                  <p className="text-indigo-950"><strong>Elemental:</strong> {selectedMonster.elemental || 'None'}</p>
                  <p className="text-indigo-950"><strong>HP:</strong> {selectedMonster.hp}</p>
                </div>
              </>
            )}

            {(popupType === 'add' || popupType === 'edit') && (
              <form onSubmit={handleSubmit(handleMonsterFormSubmit)}>
                <h2 className="text-indigo-950 text-2xl font-bold mb-4">{popupType === 'add' ? 'Add New Monster' : 'Edit Monster'}</h2>
                <div className="space-y-4">
                  <input name="name" defaultValue={selectedMonster?.name || ''} placeholder="Name" {...register("name")} className="w-full p-2 border rounded-md text-gray-900" required />
                  <input name="type" defaultValue={selectedMonster?.type || ''} placeholder="Type" {...register("type")} className="w-full p-2 border rounded-md text-gray-900" required />
                  <input name="elemental" defaultValue={selectedMonster?.elemental || ''} placeholder="Elemental" {...register("elemental")} className="w-full p-2 border rounded-md text-gray-900" />
                  <input name="hp" defaultValue={selectedMonster?.hp || ''} placeholder="HP" {...register("hp")} className="w-full p-2 border rounded-md text-gray-900" required />
                  <textarea name="description" defaultValue={selectedMonster?.description || ''} placeholder="Description" {...register("description")} className="w-full p-2 border rounded-md text-gray-900" required />
                  <input name="img" defaultValue={selectedMonster?.img || ''} placeholder="Image URL" {...register("img")} className="w-full p-2 border rounded-md text-gray-900" required />
                </div>
                <button type="submit" className="bg-indigo-700 text-white px-4 py-2 rounded-md mt-4 hover:bg-indigo-950">
                  {popupType === 'add' ? 'Add Monster' : 'Save Changes'}
                </button>
              </form>
            )}
          </div>
        </div>
      )}
    </div>
  );
}